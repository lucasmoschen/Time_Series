geom_vline(xintercept = (2008 + 7/12),
color = 'red',
linetype = "dashed",
size = 1) +
annotate(geom="text", x=2008, y=750000, label="Crise",
color="red")
autoplot(forecast(model4, h = 78), main = "Total de vendas nos negócios",
xlab = "Tempo",
ylab = "Milhões de dólares") +
autolayer(tbs) +
geom_vline(xintercept = (2008 + 7/12),
color = 'red',
linetype = "dashed",
size = 1) +
annotate(geom="text", x=2008, y=750000, label="Crise",
color="red")
autoplot(forecast(model4, h = 78), main = "Total de vendas nos negócios",
xlab = "Tempo",
ylab = "Milhões de dólares") +
geom_point(tbs) +
geom_vline(xintercept = (2008 + 7/12),
color = 'red',
linetype = "dashed",
size = 1) +
annotate(geom="text", x=2008, y=750000, label="Crise",
color="red")
autoplot(forecast(model4, h = 78), main = "Total de vendas nos negócios",
xlab = "Tempo",
ylab = "Milhões de dólares") +
autolayer(tbs, series = "Real") +
geom_vline(xintercept = (2008 + 7/12),
color = 'red',
linetype = "dashed",
size = 1) +
annotate(geom="text", x=2008, y=750000, label="Crise",
color="red")
autoplot(forecast(model4, h = 78), main = "Total de vendas nos negócios",
xlab = "Tempo",
ylab = "Milhões de dólares", series = "Fitted") +
autolayer(tbs, series = "Real") +
geom_vline(xintercept = (2008 + 7/12),
color = 'red',
linetype = "dashed",
size = 1) +
annotate(geom="text", x=2008, y=750000, label="Crise",
color="red")
tbs
forecast(model4, h =1 )
library(ggplot2)
library(forecast)
library(TSA)
library(tseries)
tbs <- read.csv("data/TOTBUSSMNSA.csv")
tbs <- ts(tbs$TOTBUSSMNSA, start = c(1992, 1), end = c(2020, 9), frequency = 12)
tbs <- window(tbs, start = c(2002, 1), end = c(2014, 12))
autoplot(tbs, main = "Total de vendas nos negócios",
xlab = "Tempo",
ylab = "Milhões de dólares") +
geom_vline(xintercept = (2008 + 7/12),
color = 'red',
linetype = "dashed",
size = 1) +
annotate(geom="text", x=2008, y=750000, label="Crise",
color="red")
tbs_train <- window(tbs, start = c(2002, 1), end = c(2012,12))
tbs_test <- window(tbs, start = c(2013,1), end = c(2014,12))
pre_intervention <- window(tbs_train, start = c(2002,1), end = c(2008,6))
pos_intervention <- window(tbs_train, start = c(2008,7), end = c(2012,12))
lambda <- BoxCox.lambda(pre_intervention)
pre_intervention.bc <- BoxCox(pre_intervention, lambda)
print(paste("Obtemos lambda = ", lambda))
pre_intervention.d = diff(pre_intervention.bc)
autoplot(pre_intervention.d, main = "Diferença mensal de vendas nos negócios",
xlab = "Tempo",
ylab = "Milhões de dólares")
kruskal.test(pre_intervention.d,g = cycle(pre_intervention.d))
pre_intervention.ds <- diff(pre_intervention.d, 12)
ggtsdisplay(pre_intervention.ds)
adf.test(pre_intervention.bc)
ARMA.res <- data.frame()
## valor máximo de p,q.
K <- 3
L <- 2
for (p in 0:K) {
for (q in 0:L) {
model1 <- Arima(y = pre_intervention.bc, order = c(p, 1, q), seasonal = c(0,1,0))
model2 <- Arima(y = pre_intervention.bc, order = c(p, 1, q), seasonal = c(0,1,1))
ARMA.res <- rbind(ARMA.res, c(p,q,model1$aic, model1$bic, model1$aicc,
model2$aic, model2$bic, model2$aicc))
}
}
names(ARMA.res) = c('p', 'q','AIC', 'BIC', 'AICc', 'AIC (S)', 'BIC (S)', 'AICc (S)')
print(ARMA.res)
model1 <- Arima(pre_intervention,
order = c(2,1,0),
seasonal = c(0,1,1),
lambda = "auto")
summary(model1)
checkresiduals(model1)
jarque.bera.test(model1$residuals)
model2 <- auto.arima(pre_intervention,
lambda = "auto")
summary(model2)
checkresiduals(model2)
jarque.bera.test(model2$residuals)
model3 <- auto.arima(pre_intervention,
lambda = 0)
summary(model3)
checkresiduals(model3)
jarque.bera.test(model3$residuals)
model4 <- Arima(pre_intervention,
order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
summary(model4)
checkresiduals(model4)
jarque.bera.test(model4$residuals)
autoplot(tbs, main = "Total de vendas nos negócios",
xlab = "Tempo",
ylab = "Milhões de dólares") +
geom_vline(xintercept = (2008 + 7/12),
color = 'red',
linetype = "dashed",
size = 1) +
annotate(geom="text", x=2008, y=750000, label="Crise",
color="red")
n = length(pre_intervention)
m = length(pos_intervention)
for (j in 1:m) {
model <- Arima(tbs_train[1:(n + j - 1)],
order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
}
forecast(model, h = 1)
a <- forecast(model, h = 1)
a
a$mean
n = length(pre_intervention)
m = length(pos_intervention)
for (j in 1:m) {
model <- Arima(tbs_train[1:(n + j - 1)],
order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
z_hat <- forecast(model, h = 1)$mean
}
model$sigma2
norm(c(1,1))
norm(matrix(1,1))
matrix(1,1)
matrix(1,1,1)
matrix(1,1,11)
a
a <- seq(1,4)
a
a**2
a^2
sum(a^2)
n = length(pre_intervention)
m = length(pos_intervention)
a <- rep(0, m)
for (j in 1:m) {
model <- Arima(tbs_train[1:(n + j - 1)],
order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
z_hat_j <- forecast(model, h = 1)$mean
a[j] <- pos_intervention[j] - z_hat_j
if(j==1){
sigma2 <- model$sigma2
}
}
Q <- sum(a^2)/sigma2
print(paste("Q = "), Q)
n = length(pre_intervention)
m = length(pos_intervention)
a <- rep(0, m)
for (j in 1:m) {
model <- Arima(tbs_train[1:(n + j - 1)],
order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
z_hat_j <- forecast(model, h = 1)$mean
a[j] <- pos_intervention[j] - z_hat_j
if(j==1){
sigma2 <- model$sigma2
}
}
Q <- sum(a^2)/sigma2
print(paste("Q = ", Q))
model
model <- Arima(tbs_train[1:(n + j - 1)],
order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
model
Arima
help(Arima)
n = length(pre_intervention)
m = length(pos_intervention)
a <- rep(0, m)
for (j in 1:m) {
model <- Arima(pre_intervention,
order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
z_hat_j <- forecast(model, h = 1)$mean
a[j] <- pos_intervention[j] - z_hat_j
if(j==1){
sigma2 <- model$sigma2
}
}
Q <- sum(a^2)/sigma2
print(paste("Q = ", Q))
model
pre_intervention
tbs_train[1:10]
c(2002,1) + c(2,1)
j
j %12
j %% 12
12 %% 12
(1 == 0)
(1 == 0)*1
j/12
(j-1)/12
ceiling((j-1)/12)
n = length(pre_intervention)
m = length(pos_intervention)
a <- rep(0, m)
for (j in 1:m) {
month <- (j-1) %% 12 + ((j-1) %% 12 == 0)*12
year <- 2012 + ceiling((j-1)/12)
w <- window(tbs_train, start = c(2002,1), end = c(year,month))
model <- Arima(w, order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
z_hat_j <- forecast(model, h = 1)$mean
a[j] <- pos_intervention[j] - z_hat_j
if(j==1){
sigma2 <- model$sigma2
}
}
Q <- sum(a^2)/sigma2
print(paste("Q = ", Q))
n = length(pre_intervention)
m = length(pos_intervention)
a <- rep(0, m)
for (j in 1:m) {
month <- (j-1) %% 12 + ((j-1) %% 12 == 0)*12
year <- 2012 + ceiling((j-1)/12)
print(c(year,month))
w <- window(tbs_train, start = c(2002,1), end = c(year,month))
model <- Arima(w, order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
z_hat_j <- forecast(model, h = 1)$mean
a[j] <- pos_intervention[j] - z_hat_j
if(j==1){
sigma2 <- model$sigma2
}
}
Q <- sum(a^2)/sigma2
print(paste("Q = ", Q))
model$x
w
n = length(pre_intervention)
m = length(pos_intervention)
a <- rep(0, m)
for (j in 1:m) {
month <- (j-1) %% 12 + ((j-1) %% 12 == 0)*12
year <- 2012 + ceiling((j-1)/12)
w <- window(tbs_train, start = c(2002,1), end = c(year, month))
print(length(w))
model <- Arima(w, order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
z_hat_j <- forecast(model, h = 1)$mean
a[j] <- pos_intervention[j] - z_hat_j
if(j==1){
sigma2 <- model$sigma2
}
}
Q <- sum(a^2)/sigma2
print(paste("Q = ", Q))
n = length(pre_intervention)
m = length(pos_intervention)
a <- rep(0, m)
for (j in 1:m) {
month <- (j-1) %% 12 + ((j-1) %% 12 == 0)*12
year <- 2012 + ceiling((j-1)/12)
end <- c(year, month)
w <- window(tbs_train, start = c(2002,1), end = end)
print(length(w))
model <- Arima(w, order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
z_hat_j <- forecast(model, h = 1)$mean
a[j] <- pos_intervention[j] - z_hat_j
if(j==1){
sigma2 <- model$sigma2
}
}
Q <- sum(a^2)/sigma2
print(paste("Q = ", Q))
n = length(pre_intervention)
m = length(pos_intervention)
a <- rep(0, m)
for (j in 1:m) {
month <- (j-1) %% 12 + ((j-1) %% 12 == 0)*12
year <- 2012 + ceiling((j-1)/12)
end <- c(year, month)
print(end)
w <- window(tbs_train, start = c(2002,1), end = end)
print(length(w))
model <- Arima(w, order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
z_hat_j <- forecast(model, h = 1)$mean
a[j] <- pos_intervention[j] - z_hat_j
if(j==1){
sigma2 <- model$sigma2
}
}
Q <- sum(a^2)/sigma2
print(paste("Q = ", Q))
tbs_train[c(2002,1), c(2002,3)]
tbs_train[c(2002,1)]
tbs_train[1]
tbs_train[1]
tbs_train[c(2002,2)]
n = length(pre_intervention)
m = length(pos_intervention)
a <- rep(0, m)
for (j in 1:m) {
month <- (j-1) %% 12 + ((j-1) %% 12 == 0)*12
year <- 2012 + ceiling((j-1)/12)
end <- c(year, month)
w <- window(tbs_train, start = c(2002,1), end = end)
print(length(w))
model <- Arima(w, order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
z_hat_j <- forecast(model, h = 1)$mean
a[j] <- pos_intervention[j] - z_hat_j
if(j==1){
sigma2 <- model$sigma2
}
}
Q <- sum(a^2)/sigma2
print(paste("Q = ", Q))
n = length(pre_intervention)
m = length(pos_intervention)
a <- rep(0, m)
for (j in 1:m) {
month <- (j-1) %% 12 + ((j-1) %% 12 == 0)*12
year <- 2012 + ceiling((j-1)/12)
end <- c(year, month)
w <- window(tbs_train, start = c(2002,1), end = end)
model <- Arima(w, order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
z_hat_j <- forecast(model, h = 1)$mean
a[j] <- pos_intervention[j] - z_hat_j
if(j==1){
sigma2 <- model$sigma2
}
}
Q <- sum(a^2)/sigma2
print(paste("Q = ", Q))
a
model$sigma2
help(model)
help(arima)
n = length(pre_intervention)
library(ggplot2)
library(forecast)
library(TSA)
library(tseries)
tbs <- read.csv("data/TOTBUSSMNSA.csv")
tbs <- ts(tbs$TOTBUSSMNSA, start = c(1992, 1), end = c(2020, 9), frequency = 12)
tbs <- window(tbs, start = c(2002, 1), end = c(2014, 12))
autoplot(tbs, main = "Total de vendas nos negócios",
xlab = "Tempo",
ylab = "Milhões de dólares") +
geom_vline(xintercept = (2008 + 7/12),
color = 'red',
linetype = "dashed",
size = 1) +
annotate(geom="text", x=2008, y=750000, label="Crise",
color="red")
tbs_train <- window(tbs, start = c(2002, 1), end = c(2012,12))
tbs_test <- window(tbs, start = c(2013,1), end = c(2014,12))
pre_intervention <- window(tbs_train, start = c(2002,1), end = c(2008,6))
pos_intervention <- window(tbs_train, start = c(2008,7), end = c(2012,12))
lambda <- BoxCox.lambda(pre_intervention)
pre_intervention.bc <- BoxCox(pre_intervention, lambda)
print(paste("Obtemos lambda = ", lambda))
pre_intervention.d = diff(pre_intervention.bc)
autoplot(pre_intervention.d, main = "Diferença mensal de vendas nos negócios",
xlab = "Tempo",
ylab = "Milhões de dólares")
kruskal.test(pre_intervention.d,g = cycle(pre_intervention.d))
pre_intervention.ds <- diff(pre_intervention.d, 12)
ggtsdisplay(pre_intervention.ds)
adf.test(pre_intervention.bc)
ARMA.res <- data.frame()
## valor máximo de p,q.
K <- 3
L <- 2
for (p in 0:K) {
for (q in 0:L) {
model1 <- Arima(y = pre_intervention.bc, order = c(p, 1, q), seasonal = c(0,1,0))
model2 <- Arima(y = pre_intervention.bc, order = c(p, 1, q), seasonal = c(0,1,1))
ARMA.res <- rbind(ARMA.res, c(p,q,model1$aic, model1$bic, model1$aicc,
model2$aic, model2$bic, model2$aicc))
}
}
names(ARMA.res) = c('p', 'q','AIC', 'BIC', 'AICc', 'AIC (S)', 'BIC (S)', 'AICc (S)')
print(ARMA.res)
model1 <- Arima(pre_intervention,
order = c(2,1,0),
seasonal = c(0,1,1),
lambda = "auto")
summary(model1)
checkresiduals(model1)
jarque.bera.test(model1$residuals)
model2 <- auto.arima(pre_intervention,
lambda = "auto")
summary(model2)
checkresiduals(model2)
jarque.bera.test(model2$residuals)
model3 <- auto.arima(pre_intervention,
lambda = 0)
summary(model3)
checkresiduals(model3)
jarque.bera.test(model3$residuals)
model4 <- Arima(pre_intervention,
order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
summary(model4)
checkresiduals(model4)
jarque.bera.test(model4$residuals)
autoplot(tbs, main = "Total de vendas nos negócios",
xlab = "Tempo",
ylab = "Milhões de dólares") +
geom_vline(xintercept = (2008 + 7/12),
color = 'red',
linetype = "dashed",
size = 1) +
annotate(geom="text", x=2008, y=750000, label="Crise",
color="red")
n = length(pre_intervention)
m = length(pos_intervention)
a <- rep(0, m)
for (j in 1:m) {
w <- ts(tbs_train[1:(n+j-1)], start = c(2002,1), end = numeric(), frequency = 12)
model <- Arima(w, order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
z_hat_j <- forecast(model, h = 1)$mean
a[j] <- pos_intervention[j] - z_hat_j
if(j==1){
sigma2 <- model$sigma2
}
}
n = length(pre_intervention)
m = length(pos_intervention)
a <- rep(0, m)
for (j in 1:m) {
w <- ts(tbs_train[1:(n+j-1)], start = c(2002,1), frequency = 12)
model <- Arima(w, order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
z_hat_j <- forecast(model, h = 1)$mean
a[j] <- pos_intervention[j] - z_hat_j
if(j==1){
sigma2 <- model$sigma2
}
}
Q <- sum(a^2)/sigma2
print(paste("Q = ", Q))
w
a
sigma2
model$sigma2
tbs_train
model$sigma2
model$residuals
w <- ts(tbs_train[1:(n)], start = c(2002,1), frequency = 12)
w
model <- Arima(w, order = c(2,1,0),
seasonal = c(0,1,1),
lambda = 0)
plot(forecast(model, h = 12))
forecast(model, h = 12)$mean
forecast(model, h = 1)$mean
pos_intervention[1]
pos_intervention
forecast(model, h = 2)$mean
help("chisq.test")
help("Arima")
var(model$residuals)
qchisq(p = .05, df = m)
qchisq(p = .01, df = m)
qchisq(p = .001, df = m)
qchisq(p = .05, df = m)
1 - qchisq(p = .95, df = m)
qchisq(p = .95, df = m)
qchisq(p = .99, df = m)
